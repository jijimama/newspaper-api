openapi: 3.0.3
info:
  title: Go API Template # APIの名称。新聞管理用のテンプレートを定義。
  version: 1.0.0         # APIのバージョン。メジャー、マイナー、パッチ番号で管理。
servers:
  - url: http://0.0.0.0:8080/api/v1  # Dockerや他の環境でAPIをテストする際のベースURL。
  - url: http://localhost:8080/api/v1 # ローカルホストでの開発時に使用。
  - url: http://127.0.0.1:8080/api/v1 # ループバックアドレスを使用する場合のURL。
paths:
  /newspapers:
    post:
      tags:
        - newspapers
      summary: Create a new newspaper # 新聞記事を新規作成するエンドポイント。
      operationId: createNewspaper    # 操作を一意に識別するID。
      requestBody:
        $ref: '#/components/requestBodies/NewspaperCreateRequestBody' # 新規作成に必要なデータの構造を参照。
        required: true # リクエストボディが必須であることを指定。
      responses:
        '201':
          $ref: '#/components/responses/NewspaperResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
  /newspapers/{id}:
    get:
      tags:
        - newspapers
      summary: Find newspaper by ID # IDで新聞記事を取得するエンドポイント。
      operationId: getNewspaperById
      parameters:
        - name: id
          in: path
          required: true # パスパラメータが必須であることを指定。
          schema:
            type: integer # IDは整数型。
      responses:
        '200':
          $ref: '#/components/responses/NewspaperResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
    patch:
      tags:
        - newspapers
      summary: Update a newspaper by ID # IDで新聞記事を更新するエンドポイント。
      operationId: updateNewspaperById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/NewspaperUpdateRequestBody'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/NewspaperResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
    delete:
      tags:
        - newspapers
      summary: Delete a newspaper by ID # IDで新聞記事を削除するエンドポイント。
      operationId: deleteNewspaperById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No Content # 成功した場合、コンテンツなしのレスポンスを返す。
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
components:
  schemas:
    NewspaperUpdateRequest:
      type: object
      properties:
        title:
          type: string
        columnName:
          type: string
    NewspaperCreateRequest:
      type: object
      properties:
        title:
          type: string
        columnName:
          type: string
      required:
        - title
        - columnName
  requestBodies:
    NewspaperCreateRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NewspaperCreateRequest'
    NewspaperUpdateRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NewspaperUpdateRequest'
  responses:
    NewspaperResponse:
      description: 'newspaper response'
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: integer
              title:
                type: string
              columnName:
                type: string
            required:
              - id
              - title
              - columnName
    ErrorResponse:
      description: 'error'
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string  # エラーに関する詳細な説明を含む文字列。
            required:
              - message # エラーメッセージは必須プロパティ。